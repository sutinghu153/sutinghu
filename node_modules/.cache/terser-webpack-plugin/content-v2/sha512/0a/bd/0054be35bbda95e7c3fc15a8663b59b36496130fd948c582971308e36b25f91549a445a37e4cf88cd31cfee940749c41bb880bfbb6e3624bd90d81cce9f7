{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{419:function(t,s,a){\"use strict\";a.r(s);var e=a(54),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"linux网络编程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linux网络编程\"}},[t._v(\"#\")]),t._v(\" Linux网络编程\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"a\",{attrs:{href:\"https://mp.weixin.qq.com/s/4EqKdrqVmD92HsFkpaOOiA\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"网络协议与套接字编程 \"),a(\"OutboundLink\")],1)])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"互联网链接\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#互联网链接\"}},[t._v(\"#\")]),t._v(\" 互联网链接\")]),t._v(\" \"),a(\"p\",[t._v(\"客户端-服务器端建立通信链接，可以建立多对一的链接。\")]),t._v(\" \"),a(\"p\",[t._v(\"端与端之间进行通信。\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"网络采用的是分而治之的策略设计，将网络的功能划分为不同的模块，以分层的形式有机的组合在一起\")]),t._v(\" \"),a(\"li\",[t._v(\"每层实现不同的功能，内部实现方法对外部其它层次来说是透明的，每层向上提供服务，同时使用下层提供的服务\")]),t._v(\" \"),a(\"li\",[t._v(\"网络体系结构指网络的层次结构和每层使用协议的集合\")]),t._v(\" \"),a(\"li\",[t._v(\"体系结构中有两类是最基本的\\n\"),a(\"ol\",[a(\"li\",[t._v(\"OSI\")]),t._v(\" \"),a(\"li\",[t._v(\"TCP/IP\")])])]),t._v(\" \"),a(\"li\",[t._v(\"通信五要素\\n\"),a(\"ol\",[a(\"li\",[t._v(\"本地地址\")]),t._v(\" \"),a(\"li\",[t._v(\"本地端口\")]),t._v(\" \"),a(\"li\",[t._v(\"远程地址\")]),t._v(\" \"),a(\"li\",[t._v(\"远程端口\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"网络拓扑\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网络拓扑\"}},[t._v(\"#\")]),t._v(\" 网络拓扑\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"局域网\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#局域网\"}},[t._v(\"#\")]),t._v(\" 局域网\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1652425466883.png\"),alt:\"652425466883\"}}),t._v(\" \"),a(\"h4\",{attrs:{id:\"广域网拓扑\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#广域网拓扑\"}},[t._v(\"#\")]),t._v(\" 广域网拓扑\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1652425595535.png\"),alt:\"1652425595535\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"网络传输模型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网络传输模型\"}},[t._v(\"#\")]),t._v(\" 网络传输模型\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"网络模型分层\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网络模型分层\"}},[t._v(\"#\")]),t._v(\" 网络模型分层\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"OSI七层模型：物、数、网、传、会、表、应\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"TCP/IP 4层模型：网（链路层/网络接口层）、网、传、应\")])]),t._v(\" \"),a(\"li\",[a(\"ul\",[a(\"li\",[t._v(\"应用层：http、ftp、nfs、ssh、Telnet。。。\")]),t._v(\" \"),a(\"li\",[t._v(\"传输层：TCP、UDP\")]),t._v(\" \"),a(\"li\",[t._v(\"网络层：IP、ICMP、IGMP\")]),t._v(\" \"),a(\"li\",[t._v(\"链路层：以太网帧协议、ARP\")])])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"iso模型模块化分层\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#iso模型模块化分层\"}},[t._v(\"#\")]),t._v(\" ISO模型模块化分层\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/qgcsc.png\"),alt:\"qgcsc\"}}),t._v(\" \"),a(\"h4\",{attrs:{id:\"iso7层模型的功能\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#iso7层模型的功能\"}},[t._v(\"#\")]),t._v(\" ISO7层模型的功能\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/tcp_3.png\"),alt:\"tcp_3\"}}),t._v(\" \"),a(\"h4\",{attrs:{id:\"tcp-ip-各层的传输协议\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-ip-各层的传输协议\"}},[t._v(\"#\")]),t._v(\" TCP/IP 各层的传输协议\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/tcp.png\"),alt:\"tcp\"}}),t._v(\" \"),a(\"h4\",{attrs:{id:\"tcp-ip-端到端的过程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-ip-端到端的过程\"}},[t._v(\"#\")]),t._v(\" TCP/IP 端到端的过程\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/tcp_4.png\"),alt:\"tcp_4\"}}),t._v(\" \"),a(\"h4\",{attrs:{id:\"数据的封装和传递过程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据的封装和传递过程\"}},[t._v(\"#\")]),t._v(\" 数据的封装和传递过程\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/tcp_5.png\"),alt:\"tcp_5\"}}),t._v(\" \"),a(\"h4\",{attrs:{id:\"什么是tcp\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是tcp\"}},[t._v(\"#\")]),t._v(\" 什么是TCP\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"传输控制协议\")]),t._v(\" \"),a(\"li\",[t._v(\"向用户进程提高可靠的全双工字节流\")]),t._v(\" \"),a(\"li\",[t._v(\"数据可靠性要求高、传输量大的需求\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"什么是udp\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是udp\"}},[t._v(\"#\")]),t._v(\" 什么是UDP\")]),t._v(\" \"),a(\"p\",[t._v(\"User DataGram Protocol 用户数据报协议\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"特点\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#特点\"}},[t._v(\"#\")]),t._v(\" 特点\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"用户数据报协议\")]),t._v(\" \"),a(\"li\",[t._v(\"无连接的不可靠的\")]),t._v(\" \"),a(\"li\",[t._v(\"协议用于实时性高、对可靠性要求低\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"进行通信\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进行通信\"}},[t._v(\"#\")]),t._v(\" 进行通信\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"c-s模型\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"client server模型\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"server\")]),t._v(\" \"),a(\"th\",[t._v(\"解释\")]),t._v(\" \"),a(\"th\",[t._v(\"client\")]),t._v(\" \"),a(\"th\",[t._v(\"解释\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"socket\")]),t._v(\" \"),a(\"td\",[t._v(\"链接网络\")]),t._v(\" \"),a(\"td\",[t._v(\"socket\")]),t._v(\" \"),a(\"td\",[t._v(\"链接网络\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"bind\")]),t._v(\" \"),a(\"td\",[t._v(\"绑定请求\")]),t._v(\" \"),a(\"td\",[t._v(\"connect\")]),t._v(\" \"),a(\"td\",[t._v(\"发送请求\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"recvfrom\")]),t._v(\" \"),a(\"td\",[t._v(\"阻塞数据（处理）\")]),t._v(\" \"),a(\"td\",[t._v(\"sendto\")]),t._v(\" \"),a(\"td\",[t._v(\"发送数据\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"accept\")]),t._v(\" \"),a(\"td\",[t._v(\"接收请求\")]),t._v(\" \"),a(\"td\"),t._v(\" \"),a(\"td\")]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"sendto\")]),t._v(\" \"),a(\"td\",[t._v(\"返回数据（服务应答）\")]),t._v(\" \"),a(\"td\",[t._v(\"recvfrom\")]),t._v(\" \"),a(\"td\",[t._v(\"服务应答接收\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"close\")]),t._v(\" \"),a(\"td\",[t._v(\"关闭\")]),t._v(\" \"),a(\"td\",[t._v(\"close\")]),t._v(\" \"),a(\"td\",[t._v(\"关闭\")])])])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"socket\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"函数\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[a(\"span\",{pre:!0,attrs:{class:\"token directive-hash\"}},[t._v(\"#\")]),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sys/types.h\"')])]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[a(\"span\",{pre:!0,attrs:{class:\"token directive-hash\"}},[t._v(\"#\")]),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sys/socket.h\"')])]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"socket\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" domain\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" type\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" protocol\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"功能\\n\"),a(\"ul\",[a(\"li\",[t._v(\"创建套接字\")])])]),t._v(\" \"),a(\"li\",[t._v(\"参数\\n\"),a(\"ul\",[a(\"li\",[t._v(\"int domain 地址族 网际协议版本 IPV4/IPV6\\n\"),a(\"ul\",[a(\"li\",[t._v(\"AF_INEF    IPV4\")]),t._v(\" \"),a(\"li\",[t._v(\"AF_INET6  IPV6\")])])]),t._v(\" \"),a(\"li\",[t._v(\"int type  套接字类型\\n\"),a(\"ul\",[a(\"li\",[t._v(\"SOCK_STREAM 字节流 ，流式套接字 TCP\")]),t._v(\" \"),a(\"li\",[t._v(\"SOCK_DGRAM 数据报流，数据报套接字 UDP\")])])]),t._v(\" \"),a(\"li\",[t._v(\"int protocol 协议编号\\n\"),a(\"ul\",[a(\"li\",[t._v(\"0 表示默认，系统根据参数2 自动查找协议号\")])])]),t._v(\" \"),a(\"li\",[t._v(\"返回值\\n\"),a(\"ul\",[a(\"li\",[t._v(\"成功返回 套接字的描述符，用来定义唯一的标识\")]),t._v(\" \"),a(\"li\",[t._v(\"失败返回 -1\")])])])])]),t._v(\" \"),a(\"li\",[t._v(\"test\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[a(\"span\",{pre:!0,attrs:{class:\"token directive-hash\"}},[t._v(\"#\")]),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"stdlib.h\"')])]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[a(\"span\",{pre:!0,attrs:{class:\"token directive-hash\"}},[t._v(\"#\")]),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"stdio.h\"')])]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[a(\"span\",{pre:!0,attrs:{class:\"token directive-hash\"}},[t._v(\"#\")]),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sys/types.h\"')])]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[a(\"span\",{pre:!0,attrs:{class:\"token directive-hash\"}},[t._v(\"#\")]),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sys/socket.h\"')])]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" sockfd \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"socket\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"AF_INET\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"SOCK_DGRAM\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"sockfd\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"perror\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"socket\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"exit\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"succeed sockfd = %d\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"sockfd\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"connect() (bind)\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"函数\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"connect\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" sock\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sockaddr\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"serv_addr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"socklen_t\")]),t._v(\" addrlen\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"参数\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"sock socket文件描述符\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"addr sockaddr结构体变量指针\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"结构体\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sockaddr_in\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sa_family_t\")]),t._v(\"     sin_family\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//地址族（Address Family），也就是地址类型\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint16_t\")]),t._v(\"        sin_port\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//16位的端口号\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_addr\")]),t._v(\"  sin_addr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//32位IP地址\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"char\")]),t._v(\"            sin_zero\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//不使用，一般用0填充\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"addrlen  结构体变量的大小\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"返回值\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"成功 1\")]),t._v(\" \"),a(\"li\",[t._v(\"失败 -1\")])])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"osi模型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#osi模型\"}},[t._v(\"#\")]),t._v(\" OSI模型\")]),t._v(\" \"),a(\"p\",[t._v(\"ISO（International Organization for Standardization）即国际标准化组织为计算机的通信开发系统互连设计的模型，即OSI模型，全称计算机通信开发系统互联模型（open systems interconnection）。\")]),t._v(\" \"),a(\"p\",[t._v(\"该模型采用分层方式进行架构，架构如下：\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"osi网络架构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#osi网络架构\"}},[t._v(\"#\")]),t._v(\" OSI网络架构\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654069971926.png\"),alt:\"1654069971926\"}}),t._v(\" \"),a(\"h3\",{attrs:{id:\"osi层次介绍\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#osi层次介绍\"}},[t._v(\"#\")]),t._v(\" OSI层次介绍\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"层级\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"名称\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"物理层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"进行网络链接的硬件\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"数据链路层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"转发网络请求的硬件\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"3\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"网络层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"IPv4&IPv6协议处理进行路由和寻址，决定数据的游走路径\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"4\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"传输层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"TCP/UDP 确定两个主机间进程通信的网络传输服务\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"5\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"会话层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"进行主机进程间的通信的会话管理\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"6\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"表示层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"数据处理层（编码、解码、压缩、解压）\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"7\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"应用层\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"为计算机用户提供服务\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"套接字为什么只提供了上三层进入传输层的接口\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#套接字为什么只提供了上三层进入传输层的接口\"}},[t._v(\"#\")]),t._v(\" 套接字为什么只提供了上三层进入传输层的接口\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"顶上三层处理具体的网络应用（FTP,HTTP)的所有细节，对通信细节了解很少，底下四层对具体网络应用了解很少，在处理通信的细节。\")]),t._v(\" \"),a(\"li\",[t._v(\"因为Linux系统分为用户空间和内核空间，内核空间通常已经封装了下四层的操作，而对于大多数的应用程序，均是通过用户进程实现，因此API被构建在了传输层和会话层。\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"发现网络拓扑\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#发现网络拓扑\"}},[t._v(\"#\")]),t._v(\" 发现网络拓扑\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"netstat -i\")]),t._v(\"  提供网络接口的信息\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[t._v(\"Kernel Interface table\\n// \\nIface             MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\\n\\ndocker0          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1500\")]),t._v(\"        \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"             \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" BMU\\n// 以太网接口\\neth0             \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1500\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"272441368\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"143712\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"28478500\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" BMRU\\n// 环回接口\\nlo              \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"65536\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5281851012\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5281851012\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" LRU\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"netstat -r\")]),t._v(\"   展示路由表\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[t._v(\"Kernel IP routing table\\nDestination     Gateway         Genmask         Flags   MSS Window  irtt Iface\\n\\ndefault         gateway         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.0\")]),t._v(\".0.0         UG        \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" eth0\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10.14\")]),t._v(\".2.0       \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.0\")]),t._v(\".0.0         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"255.255\")]),t._v(\".255.0   U         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" eth0\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"172.17\")]),t._v(\".0.0      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.0\")]),t._v(\".0.0         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"255.255\")]),t._v(\".0.0     U         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" docker0\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"ifconfig+网络接口名称\")]),t._v(\" 获取接口详细信息\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"ifconfig eth0\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-shell extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[t._v(\"eth0: \"),a(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[t._v(\"flags\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"416\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"3\")]),t._v(\"<\")]),t._v(\"UP,BROADCAST,RUNNING,MULTICAST\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"  mtu \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1500\")]),t._v(\"\\n        inet \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10.14\")]),t._v(\".2.214  netmask \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"255.255\")]),t._v(\".255.0  broadcast \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10.14\")]),t._v(\".2.255\\n        inet6 fe80::2a6e:d4ff:fe8a:2eda  prefixlen \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"64\")]),t._v(\"  scopeid 0x2\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[t._v(\"0\")]),t._v(\"<\")]),t._v(\"link\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n        ether \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"28\")]),t._v(\":6e:d4:8a:2e:da  txqueuelen \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"Ethernet\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        RX packets \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"272451869\")]),t._v(\"  bytes \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"168057163491\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"156.5\")]),t._v(\" GiB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        RX errors \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"  dropped \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"143727\")]),t._v(\"  overruns \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"  frame \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n        TX packets \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"28478593\")]),t._v(\"  bytes \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"16473596749\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15.3\")]),t._v(\" GiB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n        TX errors \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"  dropped \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" overruns \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"  carrier \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"  collisions \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"ping\")]),t._v(\"  查看本地网络中IP地址的命令\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"传输层有哪些协议\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#传输层有哪些协议\"}},[t._v(\"#\")]),t._v(\" 传输层有哪些协议？\")]),t._v(\" \"),a(\"p\",[t._v(\"传输层包括TCP、UDP、SCTP协议。其中，TCP和UDP是常见的，用途广泛的协议，但是SCTP是一个比较新的协议，这些网络传输协议都通过网络层IP协议进行转发。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"UDP协议\\n\"),a(\"ul\",[a(\"li\",[t._v(\"是简单的不可靠的数据报协议\")])])]),t._v(\" \"),a(\"li\",[t._v(\"TCP协议\\n\"),a(\"ul\",[a(\"li\",[t._v(\"复杂的可靠的字节流协议\")])])]),t._v(\" \"),a(\"li\",[t._v(\"SCTP协议\\n\"),a(\"ul\",[a(\"li\",[t._v(\"SCTP协议与TCP协议相似，是一个可靠的传输协议，并且提供消息边界\")])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"tcp-ip协议族\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-ip协议族\"}},[t._v(\"#\")]),t._v(\" TCP/IP协议族\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关于协议族\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于协议族\"}},[t._v(\"#\")]),t._v(\" 关于协议族\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"协议是指网络通信过程中的约定或协议，通信的双方必须遵守一样的协议才能建立连接。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"TCP/IP 模型包含了 TCP、IP、UDP、Telnet、FTP、SMTP 等上百个互为关联的协议，其中 TCP 和 IP 是最常用的两种底层协议，所以把它们统称为“TCP/IP 协议族”。\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"协议族架构图\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#协议族架构图\"}},[t._v(\"#\")]),t._v(\" 协议族架构图\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654072807990.png\"),alt:\"1654072807990\"}}),t._v(\" \"),a(\"h3\",{attrs:{id:\"各协议作用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#各协议作用\"}},[t._v(\"#\")]),t._v(\" 各协议作用\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"协议\")]),t._v(\" \"),a(\"th\",[t._v(\"协议名称\")]),t._v(\" \"),a(\"th\",[t._v(\"协议作用\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"IPv4\")]),t._v(\" \"),a(\"td\",[t._v(\"网际协议4版本\")]),t._v(\" \"),a(\"td\",[t._v(\"使用32位地址，为TCP UDP SCTP ICMP IGMP提供分组递送服务\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"IPv6\")]),t._v(\" \"),a(\"td\",[t._v(\"网际协议6版本\")]),t._v(\" \"),a(\"td\",[t._v(\"使用128位地址 为 TCP UDP SCTP ICMPv6提供分组递送服务\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"TCP\")]),t._v(\" \"),a(\"td\",[t._v(\"传输控制协议\")]),t._v(\" \"),a(\"td\",[t._v(\"TCP是一个面向链接的协议，为用户进程提供可靠的全双工字节流\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"UDP\")]),t._v(\" \"),a(\"td\",[t._v(\"用户数据报协议\")]),t._v(\" \"),a(\"td\",[t._v(\"UDP是无连接协议，不能保证最终到达它们的目的地\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"SCTP\")]),t._v(\" \"),a(\"td\",[t._v(\"流控制传输协议\")]),t._v(\" \"),a(\"td\",[t._v(\"提供可靠的全双工关联的面向连接的协议\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"ICMP\")]),t._v(\" \"),a(\"td\",[t._v(\"网际控制消息协议\")]),t._v(\" \"),a(\"td\",[t._v(\"处理在路由器和主机之间流通的错误和控制消息\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"IGMP\")]),t._v(\" \"),a(\"td\",[t._v(\"网际组管理协议\")]),t._v(\" \"),a(\"td\",[t._v(\"用于多播\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"ARP\")]),t._v(\" \"),a(\"td\",[t._v(\"地址解析协议\")]),t._v(\" \"),a(\"td\",[t._v(\"把一个IPv4地址映射为硬件地址\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"RARP\")]),t._v(\" \"),a(\"td\",[t._v(\"反向地址解析协议\")]),t._v(\" \"),a(\"td\",[t._v(\"把硬件地址映射为IPv4\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"BPE\")]),t._v(\" \"),a(\"td\",[t._v(\"BSD分组过滤\")]),t._v(\" \"),a(\"td\",[t._v(\"提供对数据链路层的访问能力\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关于udp协议\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于udp协议\"}},[t._v(\"#\")]),t._v(\" 关于UDP协议\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"属于传输层协议\")]),t._v(\" \"),a(\"li\",[t._v(\"用户进程使用UDP套接字写入一个消息，该消息随后被封装到一个UDP数据报，进而被封装到一个IP数据报\")]),t._v(\" \"),a(\"li\",[t._v(\"UDP 不保证数据报送到的目的地，也不保证数据报的先后顺序\")]),t._v(\" \"),a(\"li\",[t._v(\"UDP提供无连接的服务，因为UDP和服务器之间没有长期存在的关系\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关于tcp协议\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于tcp协议\"}},[t._v(\"#\")]),t._v(\" 关于TCP协议\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"TCP提供了可靠的连接和数据发送服务\")]),t._v(\" \"),a(\"li\",[t._v(\"其首先与某个服务器建立连接，再跨连接与服务器交换数据，最后终止该连接\")]),t._v(\" \"),a(\"li\",[t._v(\"TCP并不能提供可靠的端对端的数据传输服务，但是内部建立了一套可靠的数据传递机制\")]),t._v(\" \"),a(\"li\",[t._v(\"TCP协议传输数据是有序的、基于字节流的，这是因为它为每个数据报提供了一个顺序位\")]),t._v(\" \"),a(\"li\",[t._v(\"TCP通过通告窗口实现流量控制，以实现通信的可靠性\")]),t._v(\" \"),a(\"li\",[t._v(\"TCP是双全工模式，即能够同时进行信号数据的双向传输\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关于sctp协议\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于sctp协议\"}},[t._v(\"#\")]),t._v(\" 关于SCTP协议\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"SCTP协议在客户端和服务端之间提供关联关系，并像TCP那样为应用进程提供可靠性、排序、流量控制及双全工的数据传送\")]),t._v(\" \"),a(\"li\",[t._v(\"SCTP是面向消息的传送，它提供各个记录的按序递送服务\")]),t._v(\" \"),a(\"li\",[t._v(\"能够在建立的端点间提供多个流，每个流各自可靠的按序递送消息，消息消失不会阻塞其它消息的投递\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"tcp三次握手创建连接\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp三次握手创建连接\"}},[t._v(\"#\")]),t._v(\" TCP三次握手创建连接\")]),t._v(\" \"),a(\"p\",[t._v(\"我们在建立TCP的连接时，必须做好以下准备\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"服务器必须准备好接受外来的连接，即能够被动打开\")]),t._v(\" \"),a(\"li\",[t._v(\"客户通过调用connect发起主动打开，客户机将发送一个SYN分节连接中发送的数据的初始序列号\")]),t._v(\" \"),a(\"li\",[t._v(\"服务器必须确认客户机的消息即SYN分节，本身将会发送ACK确认信号，同时发送一个SYN，将返回初始序列号\")]),t._v(\" \"),a(\"li\",[t._v(\"客户机再次确认服务器SYN\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654075001924.png\"),alt:\"1654075001924\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"tcp-协议选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-协议选项\"}},[t._v(\"#\")]),t._v(\" TCP 协议选项\")]),t._v(\" \"),a(\"p\",[t._v(\"TCP选项中的参数及含有\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654075158460.png\"),alt:\"1654075158460\"}}),t._v(\" \"),a(\"h3\",{attrs:{id:\"mss最大段大小选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mss最大段大小选项\"}},[t._v(\"#\")]),t._v(\" MSS最大段大小选项\")]),t._v(\" \"),a(\"p\",[t._v(\"最大段大小是指TCP协议所允许的从对方接收到的最大报文段，最大段大小只记录TCP数据的字节数而不包括其他相关的TCP与IP头部。当建立一条TCP连接时, 通信的每一方都要在\"),a(\"strong\",[t._v(\"SYN\")]),t._v(\"报文段的\"),a(\"strong\",[t._v(\"MSS\")]),t._v(\"选项中说明自已允许的最大段大小。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"sack选择确认选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#sack选择确认选项\"}},[t._v(\"#\")]),t._v(\" SACK选择确认选项\")]),t._v(\" \"),a(\"p\",[t._v(\"TCP “\"),a(\"strong\",[t._v(\"选择确认\")]),t._v(\"”（\"),a(\"strong\",[t._v(\"SACK\")]),t._v(\"）能在报文段丢失或被接收方遗漏时更好地进行重传工作。通过接收SYN (或者SYN+ACK)报文段中的“允许选择确认”选项, TCP通信方会了解到自身具有了发布SACK信息的能力。当接收到乱序的数据时, 它就能提供一个SACK选项来描述这些乱序的数据, 从而帮助对方有效地进行重传。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"wsopt窗口缩放选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#wsopt窗口缩放选项\"}},[t._v(\"#\")]),t._v(\" WSOPT窗口缩放选项\")]),t._v(\" \"),a(\"p\",[t._v(\"窗口缩放选项(表示为WSCALE或WSOPT)能够有效地将TCP窗口广告字段的范围从16位增加至30位。TCP头部不需要改变窗口广告字段的大小, 仍然维持16位的数值。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"uto用户超时选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#uto用户超时选项\"}},[t._v(\"#\")]),t._v(\" UTO用户超时选项\")]),t._v(\" \"),a(\"p\",[t._v(\"用户超时(\"),a(\"strong\",[t._v(\"UTO\")]),t._v(\")选项是一个相对较新的TCP的功能。用户超时数值(也被称为\"),a(\"strong\",[t._v(\"USER_TIMEOUT\")]),t._v(\")指明了TCP发送者在确认对方未能成功接收数据之前愿意等待该数据ACK确认的时间。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"认证选项\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#认证选项\"}},[t._v(\"#\")]),t._v(\" 认证选项\")]),t._v(\" \"),a(\"p\",[t._v(\"TCP设置了一个选项用于增强连接的安全性，当发送数据时, TCP会根据共享的密钥生成一个通信密钥, 并根据一个特殊的加密算法计算散列值。接收者装配有相同的\"),a(\"strong\",[t._v(\"密钥\")]),t._v(\", 同样也能够生成\"),a(\"strong\",[t._v(\"通信密钥\")]),t._v(\"。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"a\",{attrs:{href:\"https://blog.csdn.net/weixin_42923076/article/details/120087088\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"(63条消息) TCP的连接与断开_zkccpro的博客-CSDN博客_tcp连接断开\"),a(\"OutboundLink\")],1)])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"tcp四次挥手终止连接\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp四次挥手终止连接\"}},[t._v(\"#\")]),t._v(\" TCP四次挥手终止连接\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"应用进程首先调用close，执行主动关闭，TCP发送一个FIN分节，表示数据发送完毕\")]),t._v(\" \"),a(\"li\",[t._v(\"接收到FIN的对端执行被动关闭，这个FIN由TCP确认，它的接收也作为一个文件结束符传递给接收端应用程序\")]),t._v(\" \"),a(\"li\",[t._v(\"接收该文件结束符的应用将调用close关闭套接字，并发送FIN\")]),t._v(\" \"),a(\"li\",[t._v(\"接收这个最终FIN的原发送端TCP确认这个FIN\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654079255729.png\"),alt:\"1654079255729\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"tcp-状态转换图\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-状态转换图\"}},[t._v(\"#\")]),t._v(\" TCP 状态转换图\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654130489526.png\"),alt:\"1654130489526\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"什么是端口号\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是端口号\"}},[t._v(\"#\")]),t._v(\" 什么是端口号\")]),t._v(\" \"),a(\"p\",[t._v(\"端口号的主要作用是表示一台计算机中的特定进程所提供的服务。网络中的计算机是通过IP地址来代表其身份的，它只能表示某台特定的计算机，但是一台计算机上可以同时提供很多个服务，如数据库服务、FTP服务、Web服务等，我们就通过端口号来区别相同计算机所提供的这些不同的服务，如常见的端口号21表示的是FTP服务，端口号23表示的是Telnet服务端口号25指的是SMTP服务等。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"TCP/UDP是16位字节的端口，因此端口号16位整数\")]),t._v(\" \"),a(\"li\",[t._v(\"端口号小于256定义为常用端口，服务器一般通过常用端口识别\")]),t._v(\" \"),a(\"li\",[t._v(\"端口号只需保证端口号在本机唯一就可以了\")]),t._v(\" \"),a(\"li\",[t._v(\"客户端端口号因为存在时间太短被称为临时端口\")]),t._v(\" \"),a(\"li\",[t._v(\"大多数TCP/IP分配了1024-49151之间的端口，即用户端口\")]),t._v(\" \"),a(\"li\",[t._v(\"私用端口是49152-65535\")]),t._v(\" \"),a(\"li\",[t._v(\"任何TCP/IP实现的提供服务都用1-1023之间的端口\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654131805283.png\"),alt:\"1654131805283\"}}),t._v(\" \"),a(\"p\",[t._v(\"如图，为LANA和BSD规范的不同的端口使用，目前以LANA为主\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"什么是套接字\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是套接字\"}},[t._v(\"#\")]),t._v(\" 什么是套接字\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"套接字\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#套接字\"}},[t._v(\"#\")]),t._v(\" 套接字\")]),t._v(\" \"),a(\"p\",[t._v(\"标识每个端点的两个值（IP和端口号）通常称为一个套接字。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"套接字对\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#套接字对\"}},[t._v(\"#\")]),t._v(\" 套接字对\")]),t._v(\" \"),a(\"p\",[t._v(\"套接字对，则标识为连接两个端点的四元组：本地IP地址、本地TCP端口号、外地IP地址、外地TCP端口号。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"套接字的记号\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#套接字的记号\"}},[t._v(\"#\")]),t._v(\" 套接字的记号\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"{*:21,*:*}\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"*\")]),t._v(\" 是通配符，用来指定本地IP的地址\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\":\")]),t._v(\" 用来将IP地址和端口号进行连接，即某个IP的某个端口连接服务器\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"并发服务器如何处理请求\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#并发服务器如何处理请求\"}},[t._v(\"#\")]),t._v(\" 并发服务器如何处理请求\")]),t._v(\" \"),a(\"p\",[t._v(\"并发服务器中主服务器循环通过派生一个子进程来处理每个新的连接。\")]),t._v(\" \"),a(\"p\",[t._v(\"并发服务器在处理客户连接时，fork一个自身的副本，让子进程来处理客户的请求。\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654132754166.png\"),alt:\"1654132754166\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"套接字缓冲区及限制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#套接字缓冲区及限制\"}},[t._v(\"#\")]),t._v(\" 套接字缓冲区及限制\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mtu-最大传输单元\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mtu-最大传输单元\"}},[t._v(\"#\")]),t._v(\" MTU 最大传输单元\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"最大传输单元，在\"),a(\"a\",{attrs:{href:\"https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82&spm=1001.2101.3001.7020\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"数据链路层\"),a(\"OutboundLink\")],1),t._v(\"中，往往规定了MTU大小\")]),t._v(\" \"),a(\"li\",[t._v(\"IP层的数据包通过数据链路层如果大于MTU，将被分片，到达接收端IP层后再被重组\")]),t._v(\" \"),a(\"li\",[t._v(\"以太网的MTU为1500字节\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"mss-最大报文段\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mss-最大报文段\"}},[t._v(\"#\")]),t._v(\" MSS  最大报文段\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"最大报文段，是TCP协议的一个选项。\")]),t._v(\" \"),a(\"li\",[t._v(\"MSS选项用于在TCP建立连接时，收发双方协商一个TCP报文段所能承载的最大数据长度。\")]),t._v(\" \"),a(\"li\",[t._v(\"MSS选项只在初始化连接请求(SYN=1)的报文段中使用。\")]),t._v(\" \"),a(\"li\",[t._v(\"选择合适的MSS很重要。如果MSS小了，网络利用率低。如果MSS大了，由于在网络层需要分片，也会影响网络性能。\")]),t._v(\" \"),a(\"li\",[t._v(\"一般MSS的长度为MTU(1500)-IP首部(20)-TCP首部(20)=1460字节。\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"tcp-缓冲区及数据输出\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tcp-缓冲区及数据输出\"}},[t._v(\"#\")]),t._v(\" TCP 缓冲区及数据输出\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654134895613.png\"),alt:\"1654134895613\"}}),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"应用程序调用write函数将数据写入内核缓冲区\")]),t._v(\" \"),a(\"li\",[t._v(\"内核从缓冲区中将数据复制到套接字的发送缓冲区\\n\"),a(\"ol\",[a(\"li\",[t._v(\"发送缓冲区无法容纳应用程序的数据时，应用程序进入睡眠\")]),t._v(\" \"),a(\"li\",[t._v(\"TCP中提供了 SO_SNDBUF套接字更改缓冲区大小\")])])]),t._v(\" \"),a(\"li\",[t._v(\"TCP在进行数据发送时，往往在本地留有副本，直到确认对端收到副本为止\")]),t._v(\" \"),a(\"li\",[t._v(\"本端TCP以MSS大小或更小的字节块将数据传递给IP，同时每个字节块被做了标记\")]),t._v(\" \"),a(\"li\",[t._v(\"IP为每个块新增IP标记，构成IP数据报，根据目标IP地址查找路由表选项以确定外出接口，然后数据被传递给相应的数据链路\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"udp缓冲区及数据输出\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#udp缓冲区及数据输出\"}},[t._v(\"#\")]),t._v(\" UDP缓冲区及数据输出\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654135121893.png\"),alt:\"1654135121893\"}}),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"UDP因为并不可靠，因此并没有缓冲区进行数据的留存和观察\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"套接字的地址结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#套接字的地址结构\"}},[t._v(\"#\")]),t._v(\" 套接字的地址结构\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"套接字是网络通信的主要手段，每个套接字都需要一个参数，即套接字地址。\")]),t._v(\" \"),a(\"li\",[t._v(\"套接字用来进行目标机和本机的判别，因此主要包含IP地址和端口号\")]),t._v(\" \"),a(\"li\",[t._v(\"每个协议族都有自己的套接字地址结构 \"),a(\"code\",[t._v(\"sockaddr\")]),t._v(\" 为套接字的起始\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"posix数据类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#posix数据类型\"}},[t._v(\"#\")]),t._v(\" POSIX数据类型\")]),t._v(\" \"),a(\"p\",[t._v(\"Unix的理念是可移植性操作系统，因此，我们在进行底层开发时，必须遵守POSIX的规范，这种规范要求我们在进行网络编程时，定义的结构必须符合一些要求，如必须有至少三个字段， \"),a(\"strong\",[t._v(\"sin_family、sin_addr和sin_port\")]),t._v(\" 。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"int8_t\")]),t._v(\"\\t\\t\\t带符号\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),t._v(\"位整数\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"types\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint8_t\")]),t._v(\"\\t\\t\\t无符号\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),t._v(\"位整数\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"types\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"int16_t\")]),t._v(\"\\t\\t\\t带符号\\t\\t\\t\\t  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"types\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint16_t\")]),t._v(\"\\t\\t无\\t\\t\\t\\t   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"types\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"int32_t\")]),t._v(\"\\t\\t\\t带\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"types\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint32_t\")]),t._v(\"\\t\\t无\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"types\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sa_family_t\")]),t._v(\"\\t\\t套接字地址结构的地址族\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"socket\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"socklen_t\")]),t._v(\"\\t\\t套接字地址结构的长度，一般为\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint32_t\")]),t._v(\"\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"sys\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"socket\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_addr_t\")]),t._v(\"\\t\\tIPv4地址，一般为\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint32_t\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"netinet\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"in\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_port_t\")]),t._v(\"\\t\\tTCP或UDP端口，一般为\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint16_t\")]),t._v(\"\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"netinet\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"in\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"h\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"ipv4-套接字地址结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ipv4-套接字地址结构\"}},[t._v(\"#\")]),t._v(\" IPv4 套接字地址结构\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"em\",[t._v(\"定义在<netinet/in.h>头文件中\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[t._v(\"sockaddr_in     \\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_addr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\t\\t\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//定义该结构来表示IPv4地址\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_addr_t\")]),t._v(\"  \\ts_addr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\\t\\t        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//32位IPv4的地址\\t\\t\\t\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sockaddr_in\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//套接字地址结构\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint8_t\")]),t._v(\"\\t\\tsin_len\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//1字节，表示整个结构的长度=16字节\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sa_family_t\")]),t._v(\"\\tsin_family\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t \\t\\t    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//1字节AF_INET，表示是IPv4地址族\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_port_t\")]),t._v(\"\\tsin_port\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//2字节，uint16_t，16位的端口号，0～65535\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_addr\")]),t._v(\"\\tsin_addr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4字节，32位IPv4地址\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"char\")]),t._v(\"\\t\\tsin_zero\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//8字节，unused，用来补充位数，一般为0\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"em\",[a(\"strong\",[t._v(\"struct in_addr_t可以指明为通配地址，此时sin_addr=INADDR_ANY\")])])]),t._v(\" \"),a(\"p\",[a(\"em\",[a(\"strong\",[t._v(\"为什么要定义结构in_addr来表示IPv4地址：因为早期这个结构中还存储了其他类型，用于给IPv4地址进行A、B、C类的分类。先在随着子网划分技术的来临，这些分类逐渐被废除。现在的in_addr中仅仅有一个in_addr_t字段。\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"通用套接字地址结构-ipv4\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通用套接字地址结构-ipv4\"}},[t._v(\"#\")]),t._v(\" 通用套接字地址结构（IPv4）\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"在任何套接字函数中，需要传递进一个指向套接字地址结构的指针作为参数。为了适用于任意的协议族的不同套接字地质结构，因此定义了通用套接字地址结构。\")]),t._v(\" \"),a(\"p\",[t._v(\"通用套接字地址结构定义在<sys/socket.h>\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sockaddr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint8_t\")]),t._v(\"\\t\\tsa_len\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\tsa_family \\tsa_family\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"char\")]),t._v(\"\\t\\tsa_data\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"14\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"ipv6-套接字地址结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ipv6-套接字地址结构\"}},[t._v(\"#\")]),t._v(\" IPv6 套接字地址结构\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"头文件定义在<netinet/in.h>\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in6_addr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\t\\t\\t\\t\\t\\t\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint8_t\")]),t._v(\"\\t\\tsa_addr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"16\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//128位IPv6地址，IPv4为32位in_addr_t(uint32)\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sockaddr_in6\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint8_t\")]),t._v(\"\\t\\tsin6_len\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//1字节，表示整个结构的长度=28字节\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sa_family_t\")]),t._v(\"\\tsin6_family\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//1字节，AF_INET6，表示是IPv6地址族，IPv4为AF_INET\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in_port_t\")]),t._v(\"\\tsin6_port\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//2字节，端口号\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint32_t\")]),t._v(\"\\t\\tsin6_flowinfo\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4字节，流量窗口信息，未定义，IPv4没有\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"in6_addr\")]),t._v(\"\\tsin6_addr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//16字节，IPv6地址，IPv4为in_addr\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint32_t\")]),t._v(\"\\t\\tsin6_scpor_id\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4字节，用来标识地址所在范围的接口，IPv4没有\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"em\",[a(\"strong\",[t._v(\"struct in6_addr可以指明为通配地址，此时sin6_addr=in6addr_any（在该头文件中定义了）\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"通用套接字地址结构-ipv6\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通用套接字地址结构-ipv6\"}},[t._v(\"#\")]),t._v(\" 通用套接字地址结构（IPv6）\")]),t._v(\" \"),a(\"blockquote\",[a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"struct\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"sockaddr_storage\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"uint8_t\")]),t._v(\"\\t\\tss_len\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//本结构长度\")]),t._v(\"\\n\\t\\tsa_family_s\\tsa_family\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//地址族，AF_xxx。\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"定义在头文件<netinet/in.h>\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654150881129.png\"),alt:\"1654150881129\"}}),t._v(\" \"),a(\"h2\",{attrs:{id:\"进程和内核的结果传递\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程和内核的结果传递\"}},[t._v(\"#\")]),t._v(\" 进程和内核的结果传递\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"从进程到内核传递套接字地址结构的函数-传递值\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从进程到内核传递套接字地址结构的函数-传递值\"}},[t._v(\"#\")]),t._v(\" 从进程到内核传递套接字地址结构的函数：传递值\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"bind\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"connect\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"sendto\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"从内核到进程传递套接字地址结构的函数-传递指针\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从内核到进程传递套接字地址结构的函数-传递指针\"}},[t._v(\"#\")]),t._v(\" 从内核到进程传递套接字地址结构的函数：传递指针\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"accept\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"recvfrom\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"getsockname\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"getpeername\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"网络中的基本系统调用函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网络中的基本系统调用函数\"}},[t._v(\"#\")]),t._v(\" 网络中的基本系统调用函数\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"函数名\")]),t._v(\" \"),a(\"th\",[t._v(\"功能\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"socket()\")]),t._v(\" \"),a(\"td\",[t._v(\"根据指定的地址族、数据类型和协议来分配一个套接口的描述字及其所用的资源。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"bind()\")]),t._v(\" \"),a(\"td\",[t._v(\"当用socket()创建套接口后，它便存在于一个名字空间（地址族）中，但并未赋名。bind()函数通过给一个未命名套接口分配一个本地名字来为套接口建立本地捆绑（主机地址/端口号）。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"listen()\")]),t._v(\" \"),a(\"td\",[t._v(\"创建一个套接口并\"),a(\"a\",{attrs:{href:\"https://baike.baidu.com/item/%E7%9B%91%E5%90%AC/17293\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"监听\"),a(\"OutboundLink\")],1),t._v(\"申请的连接.\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"accept()\")]),t._v(\" \"),a(\"td\",[t._v(\"是在一个套接口接受的一个连接\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"connect()\")]),t._v(\" \"),a(\"td\",[t._v(\"用于建立与指定socket的连接\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"recvfrom()\")]),t._v(\" \"),a(\"td\",[t._v(\"接收一个数据报并保存源地址。\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"close()\")]),t._v(\" \"),a(\"td\",[t._v(\"用来关闭套接字，并终止TCP连接\")])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"io模型-阻塞、非阻塞、多路复用、异步\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#io模型-阻塞、非阻塞、多路复用、异步\"}},[t._v(\"#\")]),t._v(\" IO模型-阻塞、非阻塞、多路复用、异步\")]),t._v(\" \"),a(\"p\",[t._v(\"网络IO数据传输，在进行端到端的传输过程中，一般分两个阶段\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"客户端向服务端发送请求——数据进行网络传输——数据传输完成\")]),t._v(\" \"),a(\"li\",[t._v(\"数据从内核空间复制到进程空间\")])]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654154016432.png\"),alt:\"1654154016432\"}}),t._v(\" \"),a(\"p\",[t._v(\"几种IO模型均是基于以上阶段进行传输，不同的模型采用了不同的策略。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"阻塞式io模型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#阻塞式io模型\"}},[t._v(\"#\")]),t._v(\" 阻塞式IO模型\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654154101242.png\"),alt:\"1654154101242\"}}),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"应用发出请求，执行recvfrom系统调用，以获取数据\")]),t._v(\" \"),a(\"li\",[t._v(\"由于数据还没准备好，当前请求线程被阻塞，只能等待\")]),t._v(\" \"),a(\"li\",[t._v(\"直到数据可读或者抛出异常\\n\"),a(\"ol\",[a(\"li\",[t._v(\"如果是单线程应用，主线程挂起，CPU空置\")]),t._v(\" \"),a(\"li\",[t._v(\"如果是多线程，当前线程挂起，CPU切换时间片去执行其他线程\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"非阻塞式io模型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#非阻塞式io模型\"}},[t._v(\"#\")]),t._v(\" 非阻塞式IO模型\")]),t._v(\" \"),a(\"img\",{attrs:{src:t.$withBase(\"/imags/1654154327680.png\"),alt:\"1654154327680\"}}),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"一般的Socket对象都会有一个  setblocking(False)  或者  ConfigureBlocing(false)  之类的方法，将当前IO线程设置成非阻塞模式\")])]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"当socket设置为nonblocking时，在一阶段（数据准备阶段）线程会不断的发起recvfrom轮询\")]),t._v(\" \"),a(\"li\",[t._v(\"如果还没有准备好数据，会得到一个EWouldBLOCK错误信号\")]),t._v(\" \"),a(\"li\",[t._v(\"数据准备好之后，开始真正执行recvfrom拉取数据\\n\"),a(\"ol\",[a(\"li\",[t._v(\"轮询会极大的消耗CPU时间，所以这种模型极少用到\")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}