{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{393:function(t,s,a){\"use strict\";a.r(s);var e=a(54),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{align:\"center\"}},[t._v(\"Elastic-Search\")]),t._v(\" \"),a(\"p\",[t._v(\"关于ealstic-search的原理与实践。参考：\"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/distributed-cluster.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"集群内的原理 | Elasticsearch: 权威指南 | Elastic\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_01-大数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_01-大数据\"}},[t._v(\"#\")]),t._v(\" 01 大数据\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-1-大数据的检索问题\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-大数据的检索问题\"}},[t._v(\"#\")]),t._v(\" 1-1 大数据的检索问题\")]),t._v(\" \"),a(\"p\",[t._v(\"当系统中的数据量达到上亿规模时，数据量会达到PB级别，这个时候，对于数据的架构设计，会存在相当多的问题，比如\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"哪个数据库更适合做大数据的处理\")]),t._v(\" \"),a(\"li\",[t._v(\"大数据的单点故障如何解决\")]),t._v(\" \"),a(\"li\",[t._v(\"数据的安全性怎么保证\")]),t._v(\" \"),a(\"li\",[t._v(\"如何实现高效的大数据检索\")]),t._v(\" \"),a(\"li\",[t._v(\"大数据下统计分析如何进行\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-2-大数据下的传统方案\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-大数据下的传统方案\"}},[t._v(\"#\")]),t._v(\" 1-2 大数据下的传统方案\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"关系型数据库\")])]),t._v(\" \"),a(\"p\",[t._v(\"1）通过主从备份解决数据安全性问题；\\n2）通过数据库代理中间件心跳监测，解决单点故障问题；\\n3）通过代理中间件将查询语句分发到各个slave节点进行查询，并汇总结果\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"非关系型数据库\")])]),t._v(\" \"),a(\"p\",[t._v(\"1）通过副本备份保证数据安全性；\\n2）通过节点竞选机制解决单点问题；\\n3）先从配置库检索分片信息，然后将请求分发到各个节点，最后由路由节点合并汇总结果\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_02-关于es\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_02-关于es\"}},[t._v(\"#\")]),t._v(\" 02 关于ES\")]),t._v(\" \"),a(\"p\",[t._v(\"elastic-search 是一个分布式、可拓展、实时的搜索与数据分析引擎。它可以从项目一开始就让我们能够获得数据的搜索、分析和探索的能力。\")]),t._v(\" \"),a(\"p\",[t._v(\"能够满足的需求\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"全文检索\")]),t._v(\" \"),a(\"li\",[t._v(\"结构化搜索\")]),t._v(\" \"),a(\"li\",[t._v(\"分析\")]),t._v(\" \"),a(\"li\",[t._v(\"...\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_03-安装es\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_03-安装es\"}},[t._v(\"#\")]),t._v(\" 03 安装ES\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_3-1-下载和安装\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-下载和安装\"}},[t._v(\"#\")]),t._v(\" 3-1 下载和安装\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"下载 ES\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://www.elastic.co/cn/downloads/elasticsearch\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Download Elasticsearch | Elastic\"),a(\"OutboundLink\")],1)])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"安装 ES\")]),t._v(\" \"),a(\"p\",[t._v(\"[Installation | Elasticsearch Reference \"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/5.6/_installation.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"5.6] | Elastic\"),a(\"OutboundLink\")],1)])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_3-2-启动和检测\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-启动和检测\"}},[t._v(\"#\")]),t._v(\" 3-2 启动和检测\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"启动\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#启动\"}},[t._v(\"#\")]),t._v(\" 启动\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"cd elasticsearch-<version>\\n./bin/elasticsearch  【A】\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"注： 如果想将Elasticsearch 作为一个守护进程在后台运行，则需要在后面添加参数 -d [A]\")]),t._v(\" \"),a(\"p\",[t._v(\"如果是在windows上面运行elastic search，需要运行bin\\\\elasticsearch.bat 而不是bin\\\\elasticsearch\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"检测\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#检测\"}},[t._v(\"#\")]),t._v(\" 检测\")]),t._v(\" \"),a(\"p\",[t._v(\"方案一\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"执行 jps\\n检查是否存在 es进程：Elasticsearch\\n\")])])]),a(\"p\",[t._v(\"方案二\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"curl 'http://localhost:9200/?pretty'\\n\")])])]),a(\"p\",[t._v(\"在另一个终端访问该地址，如果访问成功，会得到一个类似的结果\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('{\\n  \"name\" : \"Tom Foster\",\\n  \"cluster_name\" : \"elasticsearch\",\\n  \"version\" : {\\n    \"number\" : \"2.1.0\",\\n    \"build_hash\" : \"72cd1f1a3eee09505e036106146dc1949dc5dc87\",\\n    \"build_timestamp\" : \"2015-11-18T22:40:03Z\",\\n    \"build_snapshot\" : false,\\n    \"lucene_version\" : \"5.3.1\"\\n  },\\n  \"tagline\" : \"You Know, for Search\"\\n}\\n')])])]),a(\"blockquote\",[a(\"p\",[t._v(\"以上json格式返回的结果表示当前已启动并运行了一个ElasticSearch节点\")]),t._v(\" \"),a(\"p\",[t._v(\"单个节点可以作为一个运行中的ES实例，而一个集群是一组拥有相同 \"),a(\"code\",[t._v(\"cluster_name\")]),t._v(\" 的节点，集群中的节点可以一起工作并共享数据，还提供容错与可伸缩性。\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_04-交互es\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_04-交互es\"}},[t._v(\"#\")]),t._v(\" 04 交互ES\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_4-1-客户端\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-1-客户端\"}},[t._v(\"#\")]),t._v(\" 4-1 客户端\")]),t._v(\" \"),a(\"p\",[t._v(\"Java 与ES的交互可以使用ES内置的两个客户端。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"节点客户端（Node client）\")]),t._v(\" \"),a(\"p\",[t._v(\"节点客户端作为一个非数据节点加入到本地集群中。节点客户端本身不保存任何数据，但是它知道数据在集群的哪个节点中，并且可以把请求转发到准确的节点。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"传输客户端（Transport client）\")]),t._v(\" \"),a(\"p\",[t._v(\"轻量级的传输客户端可以将请求发送到远程集群，本身不加入集群，但是可以将请求转发到集群的节点上。\")])])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"两个Java客户端都是通过  9300 端口并使用 ES 的原生传输协议和集群交互。集群中的节点通过 9300 彼此通信，如果该端口没有打开，节点将无法形成一个集群。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_4-2-访问\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-2-访问\"}},[t._v(\"#\")]),t._v(\" 4-2 访问\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"Java之外的其它语言都可以使用 RESTful API 通过端口9200 和 ES 进行通信。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"使用\"),a(\"code\",[t._v(\"curl\")]),t._v(\" 命令进行交互\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"交互的路径\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"curl -X<VERB> '<PROTOCOL>://<HOST>:<PORT>/<PATH>?<QUERY_STRING>' -d '<BODY>'\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"参数的说明\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"部件\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"解释\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"VERB\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"HTTP方法或GET POST PUT HEAD DELETE 等谓词\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"PROTOCOL\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"http或https\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"HOST\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"ES集群中的主机名\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"PORT\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"端口号，默认 9200\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"PATH\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"API的终端路径\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"QUERY_STRING\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"任意可选的查询字符串\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"BODY\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"一个 JSON 格式的请求体 (如果请求需要的话)\")])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"例子\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"curl -XGET 'http://localhost:9200/_count?pretty' -d '\\n{\\n    \\\"query\\\": {\\n        \\\"match_all\\\": {}\\n    }\\n}\\n'\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"返回值\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('{\\n    \"count\" : 0,\\n    \"_shards\" : {\\n        \"total\" : 5,\\n        \"successful\" : 5,\\n        \"failed\" : 0\\n    }\\n}\\n')])])])])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_4-3-面向文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-3-面向文档\"}},[t._v(\"#\")]),t._v(\" 4-3 面向文档\")]),t._v(\" \"),a(\"p\",[t._v(\"在应用程序中很少只是一个简单的键值对的列表。通常，它们拥有更复杂的数据结构，可能包括日期、地理信息、其它对象或者数组等。\")]),t._v(\" \"),a(\"p\",[t._v(\"ElasticSearch 是面向文档的，意味着它存储整个对象或文档。elastic search不仅存储文档，而且索引每个文档的内容，使之可以被检索。\")]),t._v(\" \"),a(\"p\",[t._v(\"在ES中，我们对文档进行索引、检索、排序和过滤而不是对行列数据进行处理。这是一种完全不同的思考数据的方式，也是ES能支持复杂全文检索的原因。\")]),t._v(\" \"),a(\"p\",[t._v(\"ES对文档的序列化格式是JSON。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_4-4-关于索引\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-4-关于索引\"}},[t._v(\"#\")]),t._v(\" 4-4 关于索引\")]),t._v(\" \"),a(\"p\",[t._v(\"存储数据到ES的行为叫索引，因此索引有两个方面的含义\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[a(\"strong\",[t._v(\"名词\")]),t._v(\"——文档\")]),t._v(\" \"),a(\"p\",[t._v(\"一个索引类似于传统关系数据库中的一个库，是一个存储关系型文档的地方。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[t._v(\"动词\")]),t._v(\"——保存数据\")]),t._v(\" \"),a(\"p\",[t._v(\"索引一个文档就是存储一个文档到一个索引（名词）中以便被检索和查询。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[t._v(\"倒排索引\")]),t._v(\"——检索的方式\")]),t._v(\" \"),a(\"p\",[t._v(\"关系型数据库通过增加一个索引，比如B-tree索引到指定的列上，以便提升数据检索速度。\")]),t._v(\" \"),a(\"p\",[t._v(\"ES中的每一个文档的每一个属性都是被索引的（有一个倒排索引）和可搜索的，没有倒排索引的属性是不能被搜索到的。\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_4-5-管理文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-5-管理文档\"}},[t._v(\"#\")]),t._v(\" 4-5 管理文档\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"索引文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引文档\"}},[t._v(\"#\")]),t._v(\" 索引文档\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"PUT /megacorp/employee/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"first_name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"John\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"last_name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Smith\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"age\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"        \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"I love to go rock climbing\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"interests\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sports\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"music\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"**\"),a(\"code\",[t._v(\"megacorp\")]),t._v(\"**索引名称\")]),t._v(\" \"),a(\"p\",[t._v(\"**\"),a(\"code\",[t._v(\"employee\")]),t._v(\"**类型名称\")]),t._v(\" \"),a(\"p\",[t._v(\"**\"),a(\"code\",[t._v(\"1\")]),t._v(\"**特定雇员的ID\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"检索文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#检索文档\"}},[t._v(\"#\")]),t._v(\" 检索文档\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"将 HTTP 命令由 \"),a(\"code\",[t._v(\"PUT\")]),t._v(\" 改为 \"),a(\"code\",[t._v(\"GET\")]),t._v(\" 可以用来检索文档，同样的，可以使用 \"),a(\"code\",[t._v(\"DELETE\")]),t._v(\" 命令来删除文档，以及使用 \"),a(\"code\",[t._v(\"HEAD\")]),t._v(\" 指令来检查文档是否存在。如果想更新已存在的文档，只需再次 \"),a(\"code\",[t._v(\"PUT\")]),t._v(\" 。\")])]),t._v(\" \"),a(\"p\",[t._v(\"返回结构如下\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_index\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"megacorp\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_type\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"employee\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_id\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_version\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"found\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_source\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"first_name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"John\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"last_name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Smith\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"age\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"       \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"I love to go rock climbing\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"interests\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sports\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"music\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"key\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"value\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_index\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"索引名\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_type\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"类型名称\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_id\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"编号\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_version\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"索引版本\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"found\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"是否查到\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_source\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"查询结果\")])])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"轻量搜索\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#轻量搜索\"}},[t._v(\"#\")]),t._v(\" 轻量搜索\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"基础搜索\")]),t._v(\": 搜索位于索引megacorp中的类型为employee的所有雇员的信息\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\")])])]),a(\"p\",[t._v(\"​\\t\\t\\t\"),a(\"code\",[t._v(\"_search\")]),t._v(\" 默认返回10条信息\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"关键字段搜索\")]),t._v(\"：搜索指定姓名的雇员信息\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search?q=last_name\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"Smith\\n\")])])]),a(\"h4\",{attrs:{id:\"表达式搜索\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#表达式搜索\"}},[t._v(\"#\")]),t._v(\" 表达式搜索\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"query\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"match\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"last_name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Smith\"')]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"表达式搜索2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#表达式搜索2\"}},[t._v(\"#\")]),t._v(\" 表达式搜索2\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"query\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"bool\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"must\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"match\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"last_name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"smith\"')]),t._v(\" \\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"filter\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"range\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"age\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"gt\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"以上是查询姓名 last_name 为smith，年龄大于30\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"全文搜索\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全文搜索\"}},[t._v(\"#\")]),t._v(\" 全文搜索\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"query\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"match\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"rock climbing\"')]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"使用 match 查询在’about‘属性 上搜索某个参数，得到匹配的文档如下\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n   ...\\n   \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"hits\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"total\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"max_score\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.16273327\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"hits\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"\\n         \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            ...\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_score\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.16273327\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_source\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"first_name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"John\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"last_name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Smith\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"age\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"       \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"I love to go rock climbing\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"interests\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"sports\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"music\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n         \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n         \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            ...\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_score\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.016878016\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_source\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"first_name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Jane\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"last_name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Smith\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"age\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"32\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"       \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"I like to collect rock albums\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n               \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"interests\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"music\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n         \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n   \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"ES 会默认按照相关性得分排序，即每个文档跟查询的匹配程度\")]),t._v(\" \"),a(\"p\",[t._v('\"_score\":        得分')])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"短语搜索\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#短语搜索\"}},[t._v(\"#\")]),t._v(\" 短语搜索\")]),t._v(\" \"),a(\"p\",[t._v(\"为此对 \"),a(\"code\",[t._v(\"match\")]),t._v(\" 查询稍作调整，使用一个叫做 \"),a(\"code\",[t._v(\"match_phrase\")]),t._v(\" 的查询：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"query\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"match_phrase\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"rock climbing\"')]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"高亮搜索\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高亮搜索\"}},[t._v(\"#\")]),t._v(\" 高亮搜索\")]),t._v(\" \"),a(\"p\",[t._v(\"许多应用都倾向于在每个搜索结果中 \"),a(\"em\",[t._v(\"高亮\")]),t._v(\" 部分文本片段，以便让用户知道为何该文档符合查询条件。在 Elasticsearch 中检索出高亮片段也很容易。\")]),t._v(\" \"),a(\"p\",[t._v(\"再次执行前面的查询，并增加一个新的 \"),a(\"code\",[t._v(\"highlight\")]),t._v(\" 参数：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"query\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"match_phrase\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"rock climbing\"')]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"highlight\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"fields\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"about\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"聚合分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#聚合分析\"}},[t._v(\"#\")]),t._v(\" 聚合分析\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"终于到了最后一个业务需求：支持管理者对员工目录做分析。 Elasticsearch 有一个功能叫聚合（aggregations），允许我们基于数据生成一些精细的分析结果。聚合与 SQL 中的 \"),a(\"code\",[t._v(\"GROUP BY\")]),t._v(\" 类似但更强大。\")])]),t._v(\" \"),a(\"p\",[t._v(\"如挖掘员工中最受欢迎的兴趣爱好\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /megacorp/employee/_search\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"aggs\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"all_interests\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"terms\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"field\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"interests\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"_4-6-分布式特性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-6-分布式特性\"}},[t._v(\"#\")]),t._v(\" 4-6 分布式特性\")]),t._v(\" \"),a(\"p\",[t._v(\"ES 可以横向扩展至数百、数千的服务器节点，同时可以处理PB级的数据。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"分配文档到不同的容器或分片中，文档可以存储在一个或多个节点中\")]),t._v(\" \"),a(\"li\",[t._v(\"按集群节点来均衡分配这些分片，从而对索引和搜索过程进行负载均衡\")]),t._v(\" \"),a(\"li\",[t._v(\"复制每个分片以支持数据冗余，从而防止硬件故障导致的数据丢失\")]),t._v(\" \"),a(\"li\",[t._v(\"将集群中任一节点的请求路由到存有相关数据的节点\")]),t._v(\" \"),a(\"li\",[t._v(\"集群扩容时无缝整合新节点，重新分配分片以便从离群节点恢复\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_05-es集群\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_05-es集群\"}},[t._v(\"#\")]),t._v(\" 05 ES集群\")]),t._v(\" \"),a(\"p\",[t._v(\"ElasticSearch的主旨是随时可用和按需扩容，而扩容可以通过改用性能更好（垂直扩容、纵向扩容）或数量更多的服务器来（水平扩容、横向扩容）实现。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"真正的扩容是水平扩容，因为硬件的限制。即为集群添加更多的节点，将负载压力和稳定性分散到这些节点中。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_5-1-空集群\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-1-空集群\"}},[t._v(\"#\")]),t._v(\" 5-1 空集群\")]),t._v(\" \"),a(\"p\",[t._v(\"如果我们启动了一个单独的节点，里面不包含任何的数据和索引，那我们的集群就是一个空集群。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"空集群\")]),t._v(\" 包含空内容节点的集群\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"节点\")]),t._v(\" 一个运行中的Elasticsearch实例称为一个节点。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"cluster.name\")]),t._v(\"  集群是由一个或多个拥有相同 \"),a(\"code\",[t._v(\"cluster.name\")]),t._v(\" 配置的节点组成，它们共同承担数据和负载的压力。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"当一个节点被选举为主节点时，它将负责管理集群范围内的所有变更、例如增加、删除索引，或者增加、删除节点等。\")]),t._v(\" \"),a(\"p\",[t._v(\"主节点并不需要涉及到文档级别的变更和搜索等操作，所以当集群只拥有一个主节点的情况下，流量增加时并不会影响性能。\")]),t._v(\" \"),a(\"p\",[t._v(\"任何节点都可以成为主节点。\")]),t._v(\" \"),a(\"p\",[t._v(\"用户可以将请求发送到集群中的任何节点，包括主节点。\")]),t._v(\" \"),a(\"p\",[t._v(\"每个节点都能知道任意文档所处的位置，并且能够将我们的请求直接转发到存储所需文档的节点。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_5-2-集群健康\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-2-集群健康\"}},[t._v(\"#\")]),t._v(\" 5-2 集群健康\")]),t._v(\" \"),a(\"p\",[t._v(\"Elasticsearch 的集群监控信息中包含了许多的统计数据，其中最为重要的一项就是 \"),a(\"em\",[t._v(\"集群健康\")]),t._v(\" ， 它在 \"),a(\"code\",[t._v(\"status\")]),t._v(\" 字段中展示为 \"),a(\"code\",[t._v(\"green\")]),t._v(\" 、 \"),a(\"code\",[t._v(\"yellow\")]),t._v(\" 或者 \"),a(\"code\",[t._v(\"red\")]),t._v(\" 。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /_cluster/health\\n\")])])]),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"status\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"description\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"green\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"所有主分片和副分片都正常运行\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"yellow\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"所有主分片都正常运行，但不是所有副分片都正常运行\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"red\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"有主分片没能正常运行\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_5-3-添加索引\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-3-添加索引\"}},[t._v(\"#\")]),t._v(\" 5-3 添加索引\")]),t._v(\" \"),a(\"p\",[t._v(\"索引实际上是指向一个或多个物理分片的逻辑命名空间。\")]),t._v(\" \"),a(\"p\",[t._v(\"一个分片是一个底层的工作单元，仅保存全部数据的一部分。其中，一个分片是一个Lucene的实例，以及它本身就是一个完整的搜索引擎。文档被存储和索引到分片内，但是应用程序是直接与索引而不是分片进行交互。\")]),t._v(\" \"),a(\"p\",[t._v(\"elastic search是利用分片将数据分发到集群内各处的。分片是数据的容器，文档保存在分片内，分片又被分配到集群内的各个节点里。当集群的规模扩大或缩小时，ES会自动在各节点中迁移分片，使数据仍然均匀分布在集群里。\")]),t._v(\" \"),a(\"p\",[t._v(\"一个分片可以是主分片或者副本分片，索引内任意一个文档都归属于一个主分片，所以主分片的数目决定索引能够保存的最大数据量。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"PUT /blogs\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n   \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"settings\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"number_of_shards\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"number_of_replicas\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n   \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"添加索引示例\")]),t._v(\" \"),a(\"p\",[t._v(\"number_of_shards ： 分片数\")]),t._v(\" \"),a(\"p\",[t._v(\"number_of_replicas：副本数\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_5-4-故障转移\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-4-故障转移\"}},[t._v(\"#\")]),t._v(\" 5-4 故障转移\")]),t._v(\" \"),a(\"p\",[t._v(\"当集群只有一个节点在运行时，意味着会有一个单点故障问题——没有冗余。当我们启动第二个节点时，可防止数据丢失。\")]),t._v(\" \"),a(\"p\",[t._v(\"多个节点可以共享目录，因此只需要让所有的节点都又相同的\"),a(\"code\",[t._v(\"cluster.name\")]),t._v(\"配置，就会自动发现集群并加入。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_5-5-水平扩容\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-5-水平扩容\"}},[t._v(\"#\")]),t._v(\" 5-5 水平扩容\")]),t._v(\" \"),a(\"p\",[t._v(\"主分片的数目在索引创建时就已经确定了下来。\")]),t._v(\" \"),a(\"p\",[t._v(\"这个数目定义了这个索引能够 \"),a(\"em\",[t._v(\"存储\")]),t._v(\" 的最大数据量。（实际大小取决于你的数据、硬件和使用场景。） 但是，读操作——搜索和返回数据——可以同时被主分片 \"),a(\"em\",[t._v(\"或\")]),t._v(\" 副本分片所处理，所以当你拥有越多的副本分片时，也将拥有越高的吞吐量。\")]),t._v(\" \"),a(\"p\",[t._v(\"在运行中的集群上是可以动态调整副本分片数目的，我们可以按需伸缩集群。让我们把副本数从默认的 \"),a(\"code\",[t._v(\"1\")]),t._v(\" 增加到 \"),a(\"code\",[t._v(\"2\")]),t._v(\" ：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"PUT /blogs/_settings\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n   \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"number_of_replicas\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"_5-6-应对故障\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-6-应对故障\"}},[t._v(\"#\")]),t._v(\" 5-6 应对故障\")]),t._v(\" \"),a(\"p\",[t._v(\"当集群的主节点被干掉时，会自动推举产生新的主节点。\")]),t._v(\" \"),a(\"p\",[t._v(\"而被干掉的节点的数据会被转移到正常的节点。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_06-数据out-in\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_06-数据out-in\"}},[t._v(\"#\")]),t._v(\" 06 数据out/in\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_6-1-json-文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-1-json-文档\"}},[t._v(\"#\")]),t._v(\" 6-1 Json 文档\")]),t._v(\" \"),a(\"p\",[t._v(\"将数据按对象的方式来存储。专注于使用数据，而不是根据电子表格对数据建模。有效的提高了使用对象的灵活性。\")]),t._v(\" \"),a(\"p\",[t._v(\"对象，基于特定语言的内存的数据结构。为了通过网络发送或存储它。我们需要将它表示成某种标准的格式。\")]),t._v(\" \"),a(\"p\",[t._v(\"JSON 是一种以人可读的文本表示对象的方法。它已经变成NoSQL世界交换数据的标准。\")]),t._v(\" \"),a(\"p\",[t._v(\"当一个对象被序列化成为JSON，它被称为一个JSON文档。\")]),t._v(\" \"),a(\"p\",[t._v(\"ES是分布式的文档存储，它能存储和检索复杂的数据结构，实时的将数据序列化为JSON文档。JSON文档中的数据能够被集群中的任意节点检索。\")]),t._v(\" \"),a(\"p\",[t._v(\"在ES中，每个字段的所有数据都是默认被索引的，即每个字段都有快速检索设置的专用倒排索引。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_6-2-es文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-2-es文档\"}},[t._v(\"#\")]),t._v(\" 6-2 ES文档\")]),t._v(\" \"),a(\"p\",[t._v(\"大多数应用中，多数实体或对象可以被序列化为包含键值对的JSON对象。\")]),t._v(\" \"),a(\"p\",[t._v(\"一个键可以是一个字段或字段的名称。\")]),t._v(\" \"),a(\"p\",[t._v(\"一个值可以是字符串、数字、另一个对象...\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"对象：仅仅是类似于hash、hashmap、字典或关联数组的JSON对象，对象中可以嵌套其它对象。\")]),t._v(\" \"),a(\"li\",[t._v(\"文档：指最顶层的根对象，这个对象被序列化成了JSON格式并被存储在ES中，指定了唯一的标识。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"文档元数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文档元数据\"}},[t._v(\"#\")]),t._v(\" 文档元数据\")]),t._v(\" \"),a(\"p\",[t._v(\"一个文档不仅仅包含它的数据，它也包含元数据——有关文档的信息。\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"元数据\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_index\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"文档存放在哪里\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_type\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"文档表示的对象类别\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"_id\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"文档唯一标记\")])])])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"_index：数据被存储和索引在分片中，而一个索引仅仅是逻辑上的命名空间，这个空间由一个或多个分片组合而成。对于应用程序而言，只需要知道。\")]),t._v(\" \"),a(\"li\",[t._v(\"_type：用对象的类别为文档进行二次分类，标记具体的对象\")]),t._v(\" \"),a(\"li\",[t._v(\"_id：是一个字符串，表示文档的位置索引\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"_index,_type,_id 三者加在一起可以唯一确定elasticsearch中一个文档的具体实例。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"其它元数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#其它元数据\"}},[t._v(\"#\")]),t._v(\" 其它元数据\")]),t._v(\" \"),a(\"p\",[t._v(\"除了以上的三个元数据外，文档中还有很多描述文档属性、ES属性的元数据。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_6-3-索引一个文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-3-索引一个文档\"}},[t._v(\"#\")]),t._v(\" 6-3 索引一个文档\")]),t._v(\" \"),a(\"p\",[t._v(\"我们在进行数据处理的过程中，需要对某个具体的文档进行处理，因此我们需要对文档进行索引。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"使用自定义id索引\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用自定义id索引\"}},[t._v(\"#\")]),t._v(\" 使用自定义ID索引\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"PUT /\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"index\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"/\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"type\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"/\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"id\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"field\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"value\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  ...\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"PUT /website/blog/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"title\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"My first blog entry\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"text\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Just trying this out...\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"date\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"2014/01/01\"')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"使用es定义id索引\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用es定义id索引\"}},[t._v(\"#\")]),t._v(\" 使用ES定义ID索引\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('POST /{index}/{type}/\\n{\\n  \"field\": \"value\",\\n  ...\\n}\\n')])])]),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"POST /website/blog/\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"title\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"My second blog entry\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"text\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Still trying this out...\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"date\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"2014/01/01\"')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"_6-4-取回一个文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-4-取回一个文档\"}},[t._v(\"#\")]),t._v(\" 6-4 取回一个文档\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"简单取回\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简单取回\"}},[t._v(\"#\")]),t._v(\" 简单取回\")]),t._v(\" \"),a(\"p\",[t._v(\"从ES中取回一个文档时，需要使用同样的 index、type、id，其中的区别只在于HTTP的不同。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /website/blog/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\"?pretty\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"GET\")]),t._v(\" 请求的响应体包括 \"),a(\"code\",[t._v('{\"found\": true}')]),t._v(\" ，这证实了文档已经被找到。 如果我们请求一个不存在的文档，我们仍旧会得到一个 JSON 响应体，但是 \"),a(\"code\",[t._v(\"found\")]),t._v(\" 将会是 \"),a(\"code\",[t._v(\"false\")]),t._v(\" 。 此外， HTTP 响应码将会是 \"),a(\"code\",[t._v(\"404 Not Found\")]),t._v(\" ，而不是 \"),a(\"code\",[t._v(\"200 OK\")]),t._v(\" 。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"响应式取回\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#响应式取回\"}},[t._v(\"#\")]),t._v(\" 响应式取回\")]),t._v(\" \"),a(\"p\",[t._v(\"我们可以通过传递 \"),a(\"code\",[t._v(\"-i\")]),t._v(\" 参数给 \"),a(\"code\",[t._v(\"curl\")]),t._v(\" 命令，该参数能够显示响应的头部：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"curl -i -XGET http\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//localhost:9200/website/blog/124?pretty\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"根据需要取回\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#根据需要取回\"}},[t._v(\"#\")]),t._v(\" 根据需要取回\")]),t._v(\" \"),a(\"p\",[t._v(\"默认情况下， \"),a(\"code\",[t._v(\"GET\")]),t._v(\" 请求会返回整个文档，这个文档正如存储在 \"),a(\"code\",[t._v(\"_source\")]),t._v(\" 字段中的一样。但是也许你只对其中的 \"),a(\"code\",[t._v(\"title\")]),t._v(\" 字段感兴趣。单个字段能用 \"),a(\"code\",[t._v(\"_source\")]),t._v(\" 参数请求得到，多个字段也能使用逗号分隔的列表来指定。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"GET /website/blog/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\"?_source=title\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"text\\n\")])])]),a(\"h3\",{attrs:{id:\"_6-5-检查文档状态\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-5-检查文档状态\"}},[t._v(\"#\")]),t._v(\" 6-5 检查文档状态\")]),t._v(\" \"),a(\"p\",[t._v(\"如果只想检查一个文档是否存在--根本不想关心内容—那么用 \"),a(\"code\",[t._v(\"HEAD\")]),t._v(\" 方法来代替 \"),a(\"code\",[t._v(\"GET\")]),t._v(\" 方法。 \"),a(\"code\",[t._v(\"HEAD\")]),t._v(\" 请求没有返回体，只返回一个 HTTP 请求报头：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"curl -i -XHEAD http\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//localhost:9200/website/blog/123\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"存在则返回\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"HTTP/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"200\")]),t._v(\" OK\\nContent-Type\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" text/plain; charset=UTF\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"-8\")]),t._v(\"\\nContent-Length\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"否则\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"HTTP/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"404\")]),t._v(\" Not Found\\nContent-Type\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" text/plain; charset=UTF\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"-8\")]),t._v(\"\\nContent-Length\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"_6-6-更新一个文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-6-更新一个文档\"}},[t._v(\"#\")]),t._v(\" 6-6 更新一个文档\")]),t._v(\" \"),a(\"p\",[t._v(\"在内部，Elasticsearch 已将旧文档标记为已删除，并增加一个全新的文档。 尽管你不能再对旧版本的文档进行访问，但它并不会立即消失。当继续索引更多的数据，Elasticsearch 会在后台清理这些已删除文档。\")]),t._v(\" \"),a(\"p\",[t._v(\"Elasticsearch 按前述完全相同方式执行以下过程：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"从旧文档构建 JSON\")]),t._v(\" \"),a(\"li\",[t._v(\"更改该 JSON\")]),t._v(\" \"),a(\"li\",[t._v(\"删除旧文档\")]),t._v(\" \"),a(\"li\",[t._v(\"索引一个新文档\")])]),t._v(\" \"),a(\"p\",[t._v(\"不同的地方是对于更新的文档，响应体的某个字段将会改变\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"_index\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"website\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"_type\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"blog\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"_id\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"_version\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"created\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"created\")]),t._v(\" 标志设置成 \"),a(\"code\",[t._v(\"false\")]),t._v(\" ，是因为相同的索引、类型和 ID 的文档已经存在。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_6-7-创建一个文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-7-创建一个文档\"}},[t._v(\"#\")]),t._v(\" 6-7 创建一个文档\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"直接创建一个文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#直接创建一个文档\"}},[t._v(\"#\")]),t._v(\" 直接创建一个文档\")]),t._v(\" \"),a(\"p\",[t._v(\"_index\"),a(\"code\",[t._v(\"、\")]),t._v(\"_type\"),a(\"code\",[t._v(\"和\")]),t._v(\"_id\"),a(\"code\",[t._v(\"的组合可以唯一标识一个文档。所以，确保创建一个新文档的最简单办法是，使用索引请求的\")]),t._v(\"POST\"),a(\"code\",[t._v(\"形式让 Elasticsearch 自动生成唯一\")]),t._v(\"_id\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"POST /website/blog/\\n{ ... }\\n\")])])]),a(\"h4\",{attrs:{id:\"创建不存在的文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建不存在的文档\"}},[t._v(\"#\")]),t._v(\" 创建不存在的文档\")]),t._v(\" \"),a(\"p\",[t._v(\"只有当一个文档不存在时才创建\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"方法一：\\nPUT /website/blog/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\"?op_type=create\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" ... \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n方法二：\\nPUT /website/blog/\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\"/_create\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" ... \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"_6-8-删除一个文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-8-删除一个文档\"}},[t._v(\"#\")]),t._v(\" 6-8 删除一个文档\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sense extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"DELETE /website/blog/123\\n\")])])]),a(\"h3\",{attrs:{id:\"_6-9-批量操作文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-9-批量操作文档\"}},[t._v(\"#\")]),t._v(\" 6-9 批量操作文档\")]),t._v(\" \"),a(\"p\",[t._v(\"bulk API 操作方式\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"{ action: { metadata }}\\\\n\\n{ request body        }\\\\n\\n{ action: { metadata }}\\\\n\\n{ request body        }\\\\n\\n...\\n\")])])]),a(\"p\",[a(\"code\",[t._v(\"action/metadata\")]),t._v(\" 行指定 \"),a(\"em\",[t._v(\"哪一个文档\")]),t._v(\" 做 \"),a(\"em\",[t._v(\"什么操作\")]),t._v(\" 。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"action\")]),t._v(\" 必须是以下选项之一:\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"create\")])])]),t._v(\" \"),a(\"p\",[t._v(\"如果文档不存在，那么就创建它。详情请见 \"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/create-doc.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"创建新文档\"),a(\"OutboundLink\")],1),t._v(\"。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"index\")])])]),t._v(\" \"),a(\"p\",[t._v(\"创建一个新文档或者替换一个现有的文档。详情请见 \"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/index-doc.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"索引文档\"),a(\"OutboundLink\")],1),t._v(\" 和 \"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/update-doc.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"更新整个文档\"),a(\"OutboundLink\")],1),t._v(\"。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"update\")])])]),t._v(\" \"),a(\"p\",[t._v(\"部分更新一个文档。详情请见 \"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/partial-updates.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"文档的部分更新\"),a(\"OutboundLink\")],1),t._v(\"。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[a(\"code\",[t._v(\"delete\")])])]),t._v(\" \"),a(\"p\",[t._v(\"删除一个文档。详情请见 \"),a(\"a\",{attrs:{href:\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/delete-doc.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"删除文档\"),a(\"OutboundLink\")],1),t._v(\"。\")])])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"metadata\")]),t._v(\" 应该指定被索引、创建、更新或者删除的文档的 \"),a(\"code\",[t._v(\"_index\")]),t._v(\" 、 \"),a(\"code\",[t._v(\"_type\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"_id\")]),t._v(\" 。\")]),t._v(\" \"),a(\"p\",[t._v(\"删除一个文档\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"delete\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_index\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"website\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_type\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"blog\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_id\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"组合操作\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-json extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[a(\"code\",[t._v(\"POST /_bulk\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"delete\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_index\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"website\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_type\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"blog\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_id\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"create\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_index\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"website\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_type\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"blog\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_id\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"title\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"My first blog post\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"index\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_index\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"website\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_type\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"blog\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"title\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"My second blog post\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"update\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_index\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"website\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_type\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"blog\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_id\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"_retry_on_conflict\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"doc\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"title\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"My updated blog post\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \\n\")])])]),a(\"h2\",{attrs:{id:\"_07-分布式的实现\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_07-分布式的实现\"}},[t._v(\"#\")]),t._v(\" 07  分布式的实现\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"分布式文档存储\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分布式文档存储\"}},[t._v(\"#\")]),t._v(\" 分布式文档存储\")]),t._v(\" \"),a(\"p\",[t._v(\"ES中有很多分布式的概念，如文件分布到集群、集群包含多个节点、节点又有分片，而这些是分布式的基础，所以了解文档的分布是很有必要的。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"es如何记录文档存储的位置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#es如何记录文档存储的位置\"}},[t._v(\"#\")]),t._v(\" ES如何记录文档存储的位置\")]),t._v(\" \"),a(\"p\",[t._v(\"当索引一个文档的时候，文档会被存储到一个分片中。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"所以有个问题：创建文档的时候，如何确定文档被存储在哪个分片中？\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"shard = hash(routing) % number_of_primary_shards\\n\")])])]),a(\"p\",[t._v(\"根据以上公式进行的。\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"routing 一个可变值，默认是文档的_id，通过hash函数生成一个数字，然后数字再除以number_of_primary_shards\")]),t._v(\" \"),a(\"li\",[t._v(\"number_of_primary_shards 主分片的数量\")]),t._v(\" \"),a(\"li\",[t._v(\"为什么我们要在创建索引的时候就确定好主分片的数量 并且永远不会改变这个数量：因为如果数量变化了，那么所有之前路由的值都会无效，文档也再也找不到了。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"es如何使得所有分片共享文档\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#es如何使得所有分片共享文档\"}},[t._v(\"#\")]),t._v(\" ES如何使得所有分片共享文档\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"轮查所有的分片，有利于扩展扩容、负载均衡\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_08-用es搜索\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_08-用es搜索\"}},[t._v(\"#\")]),t._v(\" 08 用ES搜索\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"映射（Mapping）\")])]),t._v(\" \"),a(\"p\",[t._v(\"描述数据在每个字段内如何存储\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"分析（Analysis）\")])]),t._v(\" \"),a(\"p\",[t._v(\"全文是如何处理使之可以被搜索的\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"领域特定查询语言（Query DSL）\")])]),t._v(\" \"),a(\"p\",[t._v(\"Elasticsearch 中强大灵活的查询语言\")])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}