{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{412:function(v,_,t){\"use strict\";t.r(_);var a=t(54),i=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"linux-内核架构\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linux-内核架构\"}},[v._v(\"#\")]),v._v(\" linux 内核架构\")]),v._v(\" \"),t(\"h2\",{attrs:{id:\"linux-系统特征\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linux-系统特征\"}},[v._v(\"#\")]),v._v(\" Linux 系统特征\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"开放性\\n\"),t(\"ul\",[t(\"li\",[v._v(\"兼容国际标准，多系统互联\")]),v._v(\" \"),t(\"li\",[v._v(\"可移植性高\")])])]),v._v(\" \"),t(\"li\",[v._v(\"多用户、多任务环境\")]),v._v(\" \"),t(\"li\",[v._v(\"功能强大且高效\")]),v._v(\" \"),t(\"li\",[v._v(\"丰富的网络功能\")]),v._v(\" \"),t(\"li\",[v._v(\"支持多处理器功能\")])]),v._v(\" \"),t(\"h2\",{attrs:{id:\"linux-系统的内核结构\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linux-系统的内核结构\"}},[v._v(\"#\")]),v._v(\" Linux 系统的内核结构\")]),v._v(\" \"),t(\"ol\",[t(\"li\",[v._v(\"硬件，系统的基础\")]),v._v(\" \"),t(\"li\",[v._v(\"OS核心，管理系统资源的核心\")]),v._v(\" \"),t(\"li\",[v._v(\"用户接口Shell程序等\")])]),v._v(\" \"),t(\"img\",{attrs:{src:v.$withBase(\"/imags/1653383535200.png\"),alt:\"1653383535200\"}}),v._v(\" \"),t(\"h3\",{attrs:{id:\"进程控制子系统\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程控制子系统\"}},[v._v(\"#\")]),v._v(\" 进程控制子系统\")]),v._v(\" \"),t(\"p\",[v._v(\"进程控制子系统负责对处理机及存储器进行管理。\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"进程控制\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程控制\"}},[v._v(\"#\")]),v._v(\" 进程控制\")]),v._v(\" \"),t(\"p\",[v._v(\"在Linux中，提供了一系列用于对进程进行控制的系统调用。\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"进程通信\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程通信\"}},[v._v(\"#\")]),v._v(\" 进程通信\")]),v._v(\" \"),t(\"p\",[v._v(\"用于实现进程之间通信的消息机制，用于在同一用户的各进程之间通信的“信号”通信工具以及性能优良的信号量机制等\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"存储器管理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#存储器管理\"}},[v._v(\"#\")]),v._v(\" 存储器管理\")]),v._v(\" \"),t(\"p\",[v._v(\"该功能用于为进程分配物理存储空间\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"采用段式存储管理方式，以提高内存利用率且方便用户\")]),v._v(\" \"),t(\"li\",[v._v(\"采用页式存储管理方式，以便于从逻辑上扩充内存\")])]),v._v(\" \"),t(\"h4\",{attrs:{id:\"进程调度\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程调度\"}},[v._v(\"#\")]),v._v(\" 进程调度\")]),v._v(\" \"),t(\"p\",[v._v(\"采用\"),t(\"strong\",[v._v(\"动态优先数轮转调度算法\")]),v._v(\"。系统\"),t(\"strong\",[v._v(\"按优先数最小者优先的策略\")]),v._v(\"，为选中的\"),t(\"strong\",[v._v(\"某一进程分配一个 CPU 时间片\")]),v._v(\"。当进程运行完一个时间片后，内核\"),t(\"strong\",[v._v(\"便把它送回就绪队列的末尾\")]),v._v(\"。\")]),v._v(\" \"),t(\"h3\",{attrs:{id:\"文件子系统\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文件子系统\"}},[v._v(\"#\")]),v._v(\" 文件子系统\")]),v._v(\" \"),t(\"p\",[v._v(\"文件子系统用于有效地管理系统中的所有设备和文件。\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"文件管理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文件管理\"}},[v._v(\"#\")]),v._v(\" 文件管理\")]),v._v(\" \"),t(\"p\",[v._v(\"该功能用于为文件分配存储空间、管理空闲磁盘块、控制对文件的存取\\n以及为用户检索数据。用户可通过一组系统调用来实现对文件的各种操作。\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"高速缓冲机制\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高速缓冲机制\"}},[v._v(\"#\")]),v._v(\" 高速缓冲机制\")]),v._v(\" \"),t(\"p\",[v._v(\"为使核心与外设之间的数据流在速率上相匹配，设置了多个缓冲区，每个缓冲区的大小与一个盘块的大小相当。这些缓冲区被分别链入各种链表中，如空闲缓冲区链表等。\")]),v._v(\" \"),t(\"h4\",{attrs:{id:\"设备驱动程序\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设备驱动程序\"}},[v._v(\"#\")]),v._v(\" 设备驱动程序\")]),v._v(\" \"),t(\"p\",[v._v(\"Linux系统把设备分成块设备(如磁盘、磁带等)和字符设备(如打印机)两类。相应地，也把驱动程序分成两类，文件子系统将在缓冲机制的支持下，与块设备的驱动程序之间交互作用。\")]),v._v(\" \"),t(\"h2\",{attrs:{id:\"linux如何描述和控制进程\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linux如何描述和控制进程\"}},[v._v(\"#\")]),v._v(\" Linux如何描述和控制进程\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"Linux采用段页式存储管理方式\")]),v._v(\" \"),t(\"li\",[v._v(\"系统中将段称为区region\")]),v._v(\" \"),t(\"li\",[v._v(\"每个进程配置一个进程控制块\")]),v._v(\" \"),t(\"li\",[v._v(\"一个进程 = 若干个区\")]),v._v(\" \"),t(\"li\",[v._v(\"一个区 = 正文程序区 + 数据区 + 栈区 + 共享存储区\")]),v._v(\" \"),t(\"li\",[v._v(\"一个区 = 若干个页\")])]),v._v(\" \"),t(\"h2\",{attrs:{id:\"进程控制块\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程控制块\"}},[v._v(\"#\")]),v._v(\" 进程控制块\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"进程表项，其中包括最常用的核心数据。\\n\"),t(\"ul\",[t(\"li\",[v._v(\"进程标识符（PID）\")]),v._v(\" \"),t(\"li\",[v._v(\"用户标识符（UID）拥有该进程的用户\")]),v._v(\" \"),t(\"li\",[v._v(\"进程状态，该进程的当前状态\")]),v._v(\" \"),t(\"li\",[v._v(\"事件描述符\")]),v._v(\" \"),t(\"li\",[v._v(\"进程和U区在内存或外存的地址\")]),v._v(\" \"),t(\"li\",[v._v(\"软中断信息\")]),v._v(\" \"),t(\"li\",[v._v(\"计时器\")]),v._v(\" \"),t(\"li\",[v._v(\"进程的大小\")]),v._v(\" \"),t(\"li\",[v._v(\"偏置值nice 计算优先数时使用\")]),v._v(\" \"),t(\"li\",[v._v(\"P_Link 指针，指向就绪队列中的下一个PCB指针\")])])]),v._v(\" \"),t(\"li\",[v._v(\"U 区，用于存放用户进程表项的一些扩充数据。\")]),v._v(\" \"),t(\"li\",[v._v(\"进程表项指针，指向当前(正在执行)进程的进程表项。\")]),v._v(\" \"),t(\"li\",[v._v(\"真正用户标识符 u-ruid(real user ID)，这是由超级用户分配给用户的标识符，以后，每次用户在登录进入系统时，均须输入此标识符。\")]),v._v(\" \"),t(\"li\",[v._v(\"有效用户标识符 u-euid(effective user ID)，在一般情况下，它与 ruid 相同，但在其他用户允许的情况下，可用系统调用 setuid 将它改变为其他用户标识符，以获得对该用户的文件进行操作的权力。\")]),v._v(\" \"),t(\"li\",[v._v(\"用户文件描述符表，其中记录了该进程已打开的所有文件。\")]),v._v(\" \"),t(\"li\",[v._v(\"当前目录和当前根，用于给出进程的文件系统环境。\\n计时器，记录该进程及其后代在用户态和核心态运行的时间。\")]),v._v(\" \"),t(\"li\",[v._v(\"内部 I/O 参数，给出要传输的数据量、源(或目标)数据的地址、文件的输入/输出偏移量。\")]),v._v(\" \"),t(\"li\",[v._v(\"限制字段，指对进程的大小及其能“写”的文件大小进行限制。\")]),v._v(\" \"),t(\"li\",[v._v(\"差错字段，记录系统调用执行期间所发生的错误。\")]),v._v(\" \"),t(\"li\",[v._v(\"返回值，指出系统调用的执行结果。\")]),v._v(\" \"),t(\"li\",[v._v(\"信号处理数组，用于指示在接收到每一种信号时的处理方式。\")]),v._v(\" \"),t(\"li\",[v._v(\"系统区表，存放各个区在物理存储器中的地址信息等。\")]),v._v(\" \"),t(\"li\",[v._v(\"一个进程的虚地址空间划分为若干个连续的区域：正文区、数据区、栈区等。这些区是可被共享和保护的独立实体。\")]),v._v(\" \"),t(\"li\",[v._v(\"为了对区进行管理，在核心中设置了一个系统区表(简称区表)\")]),v._v(\" \"),t(\"li\",[v._v(\"区的类型和大小。\")]),v._v(\" \"),t(\"li\",[v._v(\"区的状态。一个区有这样几种状态: 锁住、在请求中、在装入过程、有效(区已装入内存)。\")]),v._v(\" \"),t(\"li\",[v._v(\"区在物理存储器中的位置。\")]),v._v(\" \"),t(\"li\",[v._v(\"引用计数，即共享该区的进程数\")]),v._v(\" \"),t(\"li\",[v._v(\"指向文件索引结点的指针\")]),v._v(\" \"),t(\"li\",[v._v(\"进程区表，用于存放各区的起始虚地址及指向系统区表中对应区表项的指针。\")]),v._v(\" \"),t(\"li\",[v._v(\"为了记录进程的每个区在进程中的虚地址，并通过它找到该区在物理存储器中的实地址，系统为每个进程配置了一张进程区表。表中的每一项记录一个区的起始虚地址及指向系统区表中对应的区表项的指针\")])]),v._v(\" \"),t(\"img\",{attrs:{src:v.$withBase(\"/imags/1653447619958.png\"),alt:\"1653447619958\"}}),v._v(\" \"),t(\"h2\",{attrs:{id:\"进程的状态\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程的状态\"}},[v._v(\"#\")]),v._v(\" 进程的状态\")]),v._v(\" \"),t(\"p\",[v._v(\"一图看懂Linux中的进程状态\")]),v._v(\" \"),t(\"img\",{attrs:{src:v.$withBase(\"/imags/1653447684094.png\"),alt:\"1653447684094\"}})])}),[],!1,null,null,null);_.default=i.exports}}]);","extractedComments":[]}